{"version":3,"sources":["components/ToDoItem.jsx","components/RemoveBtn.jsx","components/ToDoForm.jsx","components/ToDo.jsx","index.jsx"],"names":["ToDoItem","item","handleCheck","handleRemove","checked","title","description","id","trashIcon","xmlns","x","y","width","height","viewBox","fill","stroke","d","className","style","background","padding","textDecoration","onChange","onClick","event","preventDefault","border","RemoveButton","handleRemoveAllCheckedItems","danger","ToDoForm","props","handleSubmit","Form","useForm","form","layout","onFinish","values","length","toUpperCase","match","resetFields","Item","name","placeholder","htmlType","type","ToDo","useState","todos","setTodos","idCount","setIdCount","uncheckedItemsCounter","setUncheckedItemsCounter","useEffect","quantity","i","calculateUncheckedItemsQunatity","index","findIndex","splice","filter","newItem","items","map","todo","renderToDoItems","Header","Layout","Footer","Content","App","span","offset","ReactDOM","render","document","getElementById"],"mappings":"kTAIaA,EAAW,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACjCC,EAAoCH,EAApCG,QAASC,EAA2BJ,EAA3BI,MAAOC,EAAoBL,EAApBK,YAAaC,EAAON,EAAPM,GAS/BC,EAAY,qBAAKC,MAAM,6BAA6BC,EAAE,MAAMC,EAAE,MAAMC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,cAAcC,KAAK,UAA1G,SACd,oBAAGA,KAAK,OAAO,YAAU,UAAUC,OAAO,OAAO,eAAa,IAAI,iBAAe,OAAO,kBAAgB,QAAQ,oBAAkB,KAAK,mBAAiB,GAAG,oBAAkB,IAAI,cAAY,OAAO,cAAY,OAAO,YAAU,OAAO,cAAY,OAAO,iBAAe,SAA1Q,UACI,sBAAMC,EAAE,uBAAuBF,KAAK,SACpC,mBAAGA,KAAK,UAAR,SACI,sBAAME,EAAE,shCAIpB,OACI,qBAAIC,UAAU,YACVC,MAAO,CAACC,WAAYnB,EAAKG,QAAU,yBAA2B,0BACtDiB,QAAS,GACTC,eAAgBrB,EAAKG,QAAU,eAAiB,QAH5D,UAII,cAAC,IAAD,CAAUA,QAASA,EAASmB,SApBf,kBAAMrB,EAAYK,IAoB/B,SAAqDF,IACrD,+BAAOC,IACP,cAAC,IAAD,CAAQkB,QApBK,SAACC,GAClBA,EAAMC,iBACNvB,EAAaI,IAkBsBY,MAAO,CAACC,WAAY,MAAOO,OAAQ,mBAAlE,SAAuFnB,Q,kBCbpFoB,G,OAZM,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,4BAKnB,OACI,cAAC,IAAD,CAAQC,QAAM,EAACN,QALF,SAACC,GACdA,EAAMC,iBACNG,KAGA,wCCNKE,EAAW,SAACC,GACrB,IAAQC,EAA8CD,EAA9CC,aAAcJ,EAAgCG,EAAhCH,4BAEtB,EAAeK,IAAKC,UAAbC,EAAP,oBAWA,OACI,eAAC,IAAD,CAAMlB,UAAU,YAAYkB,KAAMA,EAAMC,OAAQ,SAAUC,SAP7C,SAACC,GAHY,IACLlC,EAGjB4B,KAHiB5B,EAGekC,EAAOlC,OAHNmC,QAAU,GAAKnC,EAAM,KAAOA,EAAM,GAAGoC,eAAiBpC,EAAM,GAAGqC,MAAM,YAG/BH,EAAOjC,YAJ3BkC,QAAU,GAK7DP,EAAaM,EAAOlC,MAAOkC,EAAOjC,aAEtC8B,EAAKO,eAGL,UACI,cAAC,IAAKC,KAAN,CAAWC,KAAK,QAAQ3B,UAAU,kBAAlC,SACI,cAAC,IAAD,CAAO4B,YAAY,qBAEvB,cAAC,IAAKF,KAAN,CAAWC,KAAK,cAAc3B,UAAU,kBAAxC,SACI,cAAC,IAAD,CAAO4B,YAAY,2BAEvB,cAAC,IAAKF,KAAN,CAAW1B,UAAU,oBAArB,SACI,cAAC,IAAD,CAAQ6B,SAAS,SAASC,KAAK,UAA/B,mBAEJ,cAAC,IAAKJ,KAAN,UACI,cAAC,EAAD,CAAcf,4BAA6BA,UCzB9CoB,EAAO,SAAC,GAAkC,EAAjCpB,4BAAkC,IAEpD,EAA0BqB,mBAAS,CAC/B,CAAC3C,GAAI,EAAGF,MAAO,QAASC,YAAa,oBAAqBF,SAAS,GACnE,CAACG,GAAI,EAAGF,MAAO,SAAUC,YAAa,qBAAsBF,SAAS,KAFzE,mBAAO+C,EAAP,KAAcC,EAAd,KAKA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEA,EAA0DJ,mBAAS,GAAnE,mBAAOK,EAAP,KAA8BC,EAA9B,KAWAC,qBAAU,YAV8B,WAEpC,IADA,IAAIC,EAAW,EACNC,EAAI,EAAGA,EAAIR,EAAMX,OAAQmB,IACzBR,EAAMQ,GAAGvD,SACVsD,IAGRF,EAAyBE,GAIzBE,KACD,CAACT,IAEJ,IAAMjD,EAAc,SAACK,GACjB,IAAMsD,EAAQV,EAAMW,WAAU,SAAA7D,GAAI,OAAIA,EAAKM,KAAOA,KAClD,IAAe,IAAXsD,EAAc,CACd,IAAM5D,EAAOkD,EAAMU,GACnB5D,EAAKG,SAAWH,EAAKG,QACrB+C,EAAMY,OAAOF,EAAO,EAAG5D,GACvBmD,EAAS,YAAID,MAIfhD,EAAe,SAACI,GAClB6C,EAASD,EAAMa,QAAO,SAAC/D,GAAD,OAAUA,EAAKM,KAAOA,OAwBhD,OACI,eAAC,IAAD,CAAMF,MAAO,WAAb,iDACqCkD,GACjC,cAAC,IAAD,IACA,cAAC,EAAD,CAAUtB,aArBG,SAAC5B,EAAOC,GACzB,IAAM2D,EAAU,CACZ1D,GAAI8C,EACJhD,QACAC,cACAF,SAAS,GAEbgD,EAAS,GAAD,mBAAKD,GAAL,CAAYc,KACpBX,EAAWD,EAAU,IAaqBxB,4BAzBhB,WAC1BuB,EAASD,EAAMa,QAAO,SAAA/D,GAAI,OAAKA,EAAKG,eAyBhC,cAAC,IAAD,IAXgB,SAAC+C,GACrB,IAAMe,EAAQf,EAAMgB,KAAI,SAACC,GAAD,OAAU,cAAC,EAAD,CAAwBnE,KAAMmE,EAAMjE,aAAcA,EAAcD,YAAaA,GAA9DkE,EAAK7D,OACtD,OAAO,oBAAIW,UAAU,YAAd,SAA2BgD,IAU7BG,CAAgBlB,OC9DrBmB,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,OAAQC,EAAYF,IAAZE,QAElBC,EAAM,WACR,OAAQ,eAAC,IAAD,WACJ,cAACJ,EAAD,IACA,cAACG,EAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAKE,KAAM,GAAIC,OAAQ,EAAG1D,UAAU,OAApC,SACI,cAAC,EAAD,UAIZ,cAACsD,EAAD,QAIRK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a8b067f6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Checkbox, Button, Descriptions } from 'antd';\r\nimport { title } from 'process';\r\n\r\nexport const ToDoItem = ({item, handleCheck, handleRemove}) => {\r\n    const { checked, title, description, id } = item;\r\n\r\n    const onChangeItem = () => handleCheck(id);\r\n\r\n    const onRemoveItem = (event) => {\r\n        event.preventDefault();\r\n        handleRemove(id);\r\n    }\r\n\r\n    const trashIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"20\" height=\"20\" viewBox=\"0 0 172 172\" fill=\"#000000\">\r\n        <g fill=\"none\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" stroke-dasharray=\"\" stroke-dashoffset=\"0\" font-family=\"none\" font-weight=\"none\" font-size=\"none\" text-anchor=\"none\" mix-blend-mode=\"normal\">\r\n            <path d=\"M0,172v-172h172v172z\" fill=\"none\"></path>\r\n            <g fill=\"#ffffff\">\r\n                <path d=\"M86,14.33333c-12.57146,0 -23.03941,9.39347 -24.79639,21.5h-37.91195c-1.93842,-0.02741 -3.74144,0.99102 -4.71865,2.66532c-0.97721,1.6743 -0.97721,3.74507 0,5.41937c0.97721,1.6743 2.78023,2.69273 4.71865,2.66532h7.65658l9.02832,93.27165c0.98183,10.15158 9.4226,17.81169 19.62435,17.81169h52.79818c10.20175,0 18.63893,-7.6601 19.62435,-17.81169l9.02832,-93.27165h7.65658c1.93842,0.02741 3.74144,-0.99102 4.71865,-2.66532c0.97721,-1.6743 0.97721,-3.74507 0,-5.41937c-0.97721,-1.6743 -2.78023,-2.69273 -4.71865,-2.66532h-37.91195c-1.75697,-12.10653 -12.22493,-21.5 -24.79639,-21.5zM86,25.08333c6.73364,0 12.25775,4.54424 13.83643,10.75h-27.67285c1.57868,-6.20576 7.10278,-10.75 13.83643,-10.75zM69.875,64.5c2.967,0 5.375,2.40442 5.375,5.375v53.75c0,2.97058 -2.408,5.375 -5.375,5.375c-2.967,0 -5.375,-2.40442 -5.375,-5.375v-53.75c0,-2.97058 2.408,-5.375 5.375,-5.375zM102.125,64.5c2.967,0 5.375,2.40442 5.375,5.375v53.75c0,2.97058 -2.408,5.375 -5.375,5.375c-2.967,0 -5.375,-2.40442 -5.375,-5.375v-53.75c0,-2.97058 2.408,-5.375 5.375,-5.375z\"></path>\r\n            </g>\r\n        </g>\r\n    </svg>\r\n    return (\r\n        <li className=\"todo-item\"\r\n            style={{background: item.checked ? 'rgba(89, 194, 131, .3)' : 'rgba(100, 144, 245, .2)',\r\n                    padding: 10,\r\n                    textDecoration: item.checked ? 'line-through' : 'none'}}>\r\n            <Checkbox checked={checked} onChange={onChangeItem}>{title}</Checkbox>\r\n            <span>{description}</span>\r\n            <Button onClick={onRemoveItem} style={{background: 'red', border: '2px solid white'}}>{trashIcon}</Button>\r\n        </li>\r\n    );\r\n}","import React from 'react';\r\nimport {Button} from \"antd\";\r\nimport './removeBtn.css';\r\n\r\nconst RemoveButton = ({handleRemoveAllCheckedItems}) => {\r\n    const onRemove = (event) => {\r\n        event.preventDefault();\r\n        handleRemoveAllCheckedItems();\r\n    }\r\n    return (\r\n        <Button danger onClick={onRemove}>\r\n            Remove all checked items\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport default RemoveButton;","import React from \"react\";\r\nimport { Form, Input, Button, Divider } from \"antd\";\r\nimport RemoveButton from \"./RemoveBtn\";\r\n\r\nexport const ToDoForm = (props) => {\r\n    const { handleSubmit, handleRemoveAllCheckedItems } = props;\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const descriptionValidation = (description) => description.length >= 3;\r\n    const titleValidation = (title) => title.length >= 3 && title[0] === title[0].toUpperCase() && title[0].match(/[a-z]/i);\r\n\r\n    const onFinish = (values) => {\r\n        if (handleSubmit && titleValidation(values.title) && descriptionValidation(values.description)) {\r\n            handleSubmit(values.title, values.description);\r\n        }\r\n        form.resetFields();\r\n    }\r\n    return (\r\n        <Form className=\"todo-form\" form={form} layout={'inline'} onFinish={onFinish}>\r\n            <Form.Item name=\"title\" className=\"todo-form-input\">\r\n                <Input placeholder=\"Enter title...\"/>\r\n            </Form.Item>\r\n            <Form.Item name=\"description\" className=\"todo-form-input\">\r\n                <Input placeholder=\"Enter description...\"/>\r\n            </Form.Item>\r\n            <Form.Item className=\"todo=form-actions\">\r\n                <Button htmlType=\"submit\" type=\"primary\">Add</Button>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <RemoveButton handleRemoveAllCheckedItems={handleRemoveAllCheckedItems}/>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Button, Card, Checkbox, Divider } from \"antd\";\r\nimport { ToDoItem } from './ToDoItem';\r\nimport { ToDoForm } from './ToDoForm';\r\n\r\nexport const ToDo = ({handleRemoveAllCheckedItems}) => {\r\n\r\n    const [todos, setTodos] = useState([\r\n        {id: 1, title: \"First\", description: \"first description\", checked: false},\r\n        {id: 2, title: \"Second\", description: \"second description\", checked: false},\r\n    ]);\r\n\r\n    const [idCount, setIdCount] = useState(10);\r\n\r\n    const [uncheckedItemsCounter, setUncheckedItemsCounter] = useState(0);\r\n    const calculateUncheckedItemsQunatity = () => {\r\n        let quantity = 0;\r\n        for (let i = 0; i < todos.length; i++) {\r\n            if (!todos[i].checked) {\r\n                quantity++;\r\n            }\r\n        }\r\n        setUncheckedItemsCounter(quantity);\r\n        return <span>{uncheckedItemsCounter || 0}</span>;\r\n    }\r\n    useEffect(() => {\r\n        calculateUncheckedItemsQunatity()\r\n    }, [todos]);\r\n\r\n    const handleCheck = (id) => {\r\n        const index = todos.findIndex(item => item.id === id);\r\n        if (index !== -1) {\r\n            const item = todos[index];\r\n            item.checked = !item.checked;\r\n            todos.splice(index, 1, item);\r\n            setTodos([...todos]);\r\n        }\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        setTodos(todos.filter((item) => item.id !== id));\r\n    };\r\n    \r\n    const removeAllCheckedItems = () => {\r\n        setTodos(todos.filter(item => !item.checked));\r\n    }\r\n\r\n    const handleSubmit = (title, description) => {\r\n        const newItem = {\r\n            id: idCount,\r\n            title,\r\n            description,\r\n            checked: false\r\n        };\r\n        setTodos([...todos, newItem]);\r\n        setIdCount(idCount + 1);\r\n    }\r\n\r\n    const renderToDoItems = (todos) => {\r\n        const items = todos.map((todo) => <ToDoItem key={todo.id} item={todo} handleRemove={handleRemove} handleCheck={handleCheck}/>);\r\n        return <ul className=\"todo=list\">{items}</ul>;\r\n    };\r\n\r\n\r\n    return (\r\n        <Card title={'My todos'}>\r\n            {`Quantity of unchecked todos: ${uncheckedItemsCounter}`}\r\n            <Divider/>\r\n            <ToDoForm handleSubmit={handleSubmit} handleRemoveAllCheckedItems={removeAllCheckedItems}/>\r\n            <Divider/>\r\n            {renderToDoItems(todos)}\r\n        </Card>\r\n    );\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport 'antd/dist/antd.css'\r\nimport './index.css';\r\n\r\nimport { Layout, Row, Col } from 'antd';\r\nimport { ToDo } from \"./components/ToDo\";\r\nconst { Header, Footer, Content } = Layout;\r\n\r\nconst App = () => {\r\n    return (<Layout>\r\n        <Header></Header>\r\n        <Content>\r\n            <Row>\r\n                <Col span={12} offset={6} className=\"todo\">\r\n                    <ToDo/>\r\n                </Col>\r\n            </Row>\r\n        </Content>\r\n        <Footer></Footer>\r\n    </Layout>)\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}